- front: 'Hello World'
  back: |
    print('Hello World!')

- front: 'Binary Search'
  back: |
    def binary_search(nums: [int], target: int) -> int:
        l, r = 0, len(nums) - 1
        
        while l <= r:
            m = l + (r - l) // 2
            
            if nums[m] > target:
                r = m - 1
            elif nums[m] < target:
                l = m + 1
            else:
                return m
        
        return -1

- front: 'Singly-Linked List'
  back: |
    class ListNode:
        def __init__(self, val=0, next=None):
            self.val = val
            self.next = next

    class SinglyLinkedList:

        def reverseList(self, head: [ListNode]) -> [ListNode]:
            l = None 
            m = head
            r = None

            while m:
                r = m.next
                m.next = l
                l = m
                m = r
            
            return head
